1. For the first test you must to enter on url: http://localhost:8080/test1/static-switch-demo.xhtml
At this page you can see two buttons. Every button is open different page. But button isn't has a direct
link to another page. It's possible thought "action" and "action catchers" in faces-config.xml

2. The second test. The url of the second test is: http://localhost:8080/test2/number-switch-demo.xhtml
At this page we can see a text field and a button. The meaning of example is show how we can use
"if" operator in "navigation-rule" in faces-config.xml. If we input number that less then 100 browser
will show one page, if number is greater then 100 browser will render another page

3. The third test. URL: http://localhost:8080/test3/action-switch-demo.xhtml
This example shows dynamic "action" change. When "action" depends from a bean.
In this example "action" takes value from a bean's method. Logic: the user is input string,
appropriate bean takes the length of this string and calculate remainder of the division on 3. And
then in dependence of the reminder the bean's method "nextPage" decide what string (what page) it must
to return. So that how dynamic action is.

4. The fourth example. URL: http://localhost:8080/test4/color-switcher-demo.xhtml
This example is demonstrated program access to uicomponents on user's browser page. As we can see, we
can change components (add/remove or change style/color or change value) of any component in a page.
In this example we never touch html code... The components configure only because JSF helps us to do it.
JSF realised on silly html code difficult model with program configurable components

5. Five test url is: http://localhost:8080/test5/ajax-example1.xhtml.
This test is about AJAX. When user input it's name and press the button, user will see some little greeting
under the for. But page don't reload, page is reconstruct its changed part.
In xhtml-page:
execute - what field do we need to send
render - where we must to render the answer

6. The six's example url is: http://localhost:8080/test6/ajax-example2-onlisteners.xhtml.
This example is built on ajax listeners mechanism. This example demonstrate a page with three elements on it.
First elem - input text field. Listener executes when mouse click on field
Second elem - button. Listener executes when click on button
Third ele - input text field. Most interesting. Listener executes when mouse cursor is over the field! Just over
the field!

7. URL: http://localhost:8080/test7/fly-weight-converter.xhtml
Using AJAX we have a small temperature converter.